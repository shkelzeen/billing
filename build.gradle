buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.17'
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.google.protobuf" version "0.9.1"
    id 'application'
    id 'idea'
    id 'java'
}

def grpcVersion = '1.24.1'

group = "com.billing"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = JavaVersion.VERSION_17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenLocal()
    mavenCentral()
}


dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-data-jpa",
            "com.vladmihalcea:hibernate-types-52:2.20.0",
            'com.google.guava:guava:31.1-jre',
            "com.h2database:h2",
            'org.springdoc:springdoc-openapi-ui:1.6.12',
            'net.devh:grpc-spring-boot-starter:2.13.1.RELEASE',
            'net.devh:grpc-client-spring-boot-starter:2.13.1.RELEASE',
            'net.devh:grpc-client-spring-boot-autoconfigure:2.13.1.RELEASE')
    compileOnly('org.projectlombok:lombok',
            'org.mapstruct:mapstruct:1.5.3.Final',
            'org.mapstruct:mapstruct-processor:1.5.3.Final',
            "io.grpc:grpc-netty:${grpcVersion}",
            "io.grpc:grpc-protobuf:${grpcVersion}",
            "io.grpc:grpc-stub:${grpcVersion}",
            "io.grpc:grpc-api:${grpcVersion}",
            'com.google.protobuf:protobuf-java:3.12.0'
    )
    annotationProcessor('org.projectlombok:lombok',
            'org.mapstruct:mapstruct-processor:1.5.3.Final')
    testImplementation('org.springframework.boot:spring-boot-starter-test',
            'com.tngtech.archunit:archunit-junit5-api:1.0.0')
}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}
tasks.named('test') {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.9.2'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}


sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}
